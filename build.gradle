defaultTasks 'clean', 'javadoc', 'test', 'check', 'checkstyleMain', 'checkstyleTest', 'assemble'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'net.researchgate:gradle-release:2.4.0'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'findbugs'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'net.researchgate.release'

    version = "0.3"

    check.dependsOn jacocoTestReport

    bintrayUpload.dependsOn 'jar', 'sourceJar', 'javadocJar'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    
    javadoc {
        options.encoding = 'UTF-8'
    }
    
    repositories {
        jcenter()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    }

    configurations {
        checkstyleConfig
    }

    dependencies {
        checkstyleConfig ("com.puppycrawl.tools:checkstyle:7.1") {
            transitive = false
        }
    }    

    checkstyle {
        toolVersion = '7.1'
        configFile = new File(rootDir, "config/checkstyle.xml")
    }

    findbugs {
        excludeFilter = file("$rootProject.projectDir/config/excludeFilter.xml")
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    release {
        failOnUnversionedFiles = false
    }

    jar {
        manifest {
            attributes("Specification-Title": "Java library for parsing AFP (MODCA) printer data streams",
                 "Implementation-Title": "afpbox",
                 "Implementation-Version": version,
                 "Implementation-Vendor": "https://github.com/michaelknigge/afpbox",
                 "Created-By": System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')')
        }
    }

    bintray {
        user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintray.key') ? project.property('bintray.key') : System.getenv('BINTRAY_KEY')

        publications = ['maven']
        publish = true
        pkg {
            repo = 'maven'
            name = 'afpbox'
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/michaelknigge/afpbox.git'
            websiteUrl = 'https://github.com/michaelknigge/afpbox'
            issueTrackerUrl = 'https://github.com/michaelknigge/afpbox/issues'
            labels = ['afp','modca']
            publicDownloadNumbers = true

            githubRepo = 'michaelknigge/afpbox'

            version {
                name = project.version
                desc = "afpbox version ${project.version}"
                released = new Date()
                vcsTag = "${project.version}"

                gpg {
                    sign = true
                }
            }
        }
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allJava
    }

    task javadocJar (type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier 'sources'
                }

                artifact (javadocJar) {
                    classifier = 'javadoc'
                }

                groupId 'de.textmode.afpbox'
                artifactId 'afpbox'
                version "${project.version}"
            }
        }
    }
}
